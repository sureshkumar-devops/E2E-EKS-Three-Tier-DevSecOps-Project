pipeline
{
    agent any
    triggers { pollSCM '* * * * *' }
    tools
    {
        jdk 'JAVA_HOME'
    }
    environment
    {
        scanner_home= tool 'sonarqube-scanner'
    }
    stages
    {
        stage('Clean Workspace')
        {
            steps
            {
                cleanWs()
            }
        }
        stage('Git Checkout')
        {
            steps
            {
                git branch:'master', url:'https://github.com/sureshkumar-devops/E2E-EKS-Three-Tier-DevSecOps-Project.git'
            }
        }
        // stage('OWASP Check')
        // {
        //     steps
        //     {
        //         dir('app/frontend')
        //         {
        //           dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DPCHECK_HOME'
        //           dependencyCheckPublisher pattern: '**/frontend-report.xml'
        //         }
        //     }
        // }
        // stage('SonarQube Analysis')
        // {
        //    steps
        //    {
        //     dir('app/frontend')
        //     {
        //       withSonarQubeEnv('sonarqube-server')
        //       {
        //          sh ''' $scanner_home/bin/sonar-scanner \
        //            -Dsonar.ProjectName=frontend \
        //            -Dsonar.ProjectKey=frontend '''
        //       }
        //     }
        //    }
        // }
        // stage('QualityGates')
        // {
        //     steps
        //     {
        //         dir('app/frontend')
        //         {
        //             script
        //             {
        //                 timeout(time: 1, unit: 'MINUTES')
        //                 {
        //                     waitForQualityGate abortPipeline: false
        //                 }
        //             }
        //         }               
        //     }
        // }
        // stage('Trivy FS SCAN')
        // {
        //     steps
        //     {
        //         dir('app/frontend')
        //         { 
        //             script
        //             {
        //                 sh 'trivy fs . '    
        //             }
        //         }
        //     }
        // }
        stage('Build Docker Image & Tag')
        {
            steps
            {
                //dir('app/frontend')
                {
                    script
                    {
                       withDockerRegistry(credentialsId: 'docker-credentials', toolName: 'DOCKER_HOME') 
                       { 
                            sh '''docker build -t frontend-image:latest  -f /app/docker/dockerfiles/frontend/Dockerfile .'''
                            //sh 'docker tag lehardocker/frontend-img:v1 frontend-img:latest'
                       }
                    }
                }
            }
        }
        
    }
}